@page "/"
@using Microsoft.AspNetCore.Components.WebAssembly.Hosting

@inject IConfiguration Configuration
@inject IWebAssemblyHostEnvironment Host
@inject IBooksService BooksService

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.



<h3>Available Books</h3>
<div style="display:flex">
    @foreach (var book in _books)
    {
       
        <BookCard Book="book" 
            OnAddToCartClicked="AddToCart"
           
            />
            
    }
</div>
<DataListView TItemType="Book" Items="_books" ColumnsCount="4">
    <ItemTemplate>
        <BookCard Book="@context" OnAddToCartClicked="AddToCart" />
    </ItemTemplate>
</DataListView>

@*<BookCard Book="_nonExistent"></BookCard>*@
<h3 class="mt-3">My Cart</h3>
<ul>
    @foreach (var item in _booksCart)
    {
        <li>@item.Title</li>
    }
</ul>

<p>Api Url: @Configuration["ApiUrl"]</p>

@if (!Host.IsDevelopment())
{
    <SurveyPrompt Title="How is Blazor working for you?" />
}

<ModalPopup Title="Hi" IsOpen="@_isWelcomeModalOpen"
    OnCloseClicked="() => _isWelcomeModalOpen = false">
    <ChildContent>
        <p>Welcome to our Books Store, here you will
            find a huge collection of books to help you
            build a career in software development,
            enjoy it!
        </p>
    </ChildContent>
    <FooterContent>
        <button class="btn btn-primary"
        @onclick="() => _isWelcomeModalOpen = false">Discover It</button>
    </FooterContent>
</ModalPopup>

@code {
    private List<Book> _books = new List<Book>();
    private List<Book> _booksCart = new List<Book>();
    private string? _backStyle ;
    private bool _isWelcomeModalOpen = true;

    // private Book? _nonExistent;
    protected override async Task OnInitializedAsync()
    {
        _books = await BooksService.GetAllBooksAsync();
    }
    private Book? _firstBook
    {
        get
        {
            return _books.FirstOrDefault();
        }
    }

    private void AddToCart(Book selectedBook)
    {
        _booksCart.Add(selectedBook);
    }
}